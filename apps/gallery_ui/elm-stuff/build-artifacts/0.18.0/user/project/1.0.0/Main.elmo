var _user$project$Main$subscriptions = function (model) {
	return _elm_lang$core$Platform_Sub$none;
};
var _user$project$Main$getPage = function (pageState) {
	var _p0 = pageState;
	if (_p0.ctor === 'Loaded') {
		return _p0._0;
	} else {
		return _p0._0;
	}
};
var _user$project$Main$Model = function (a) {
	return {pageState: a};
};
var _user$project$Main$Details = function (a) {
	return {ctor: 'Details', _0: a};
};
var _user$project$Main$Gallery = function (a) {
	return {ctor: 'Gallery', _0: a};
};
var _user$project$Main$Errored = function (a) {
	return {ctor: 'Errored', _0: a};
};
var _user$project$Main$NotFound = {ctor: 'NotFound'};
var _user$project$Main$Blank = {ctor: 'Blank'};
var _user$project$Main$initialPage = _user$project$Main$Blank;
var _user$project$Main$TransitioningFrom = function (a) {
	return {ctor: 'TransitioningFrom', _0: a};
};
var _user$project$Main$Loaded = function (a) {
	return {ctor: 'Loaded', _0: a};
};
var _user$project$Main$DetailsMsg = function (a) {
	return {ctor: 'DetailsMsg', _0: a};
};
var _user$project$Main$GalleryMsg = function (a) {
	return {ctor: 'GalleryMsg', _0: a};
};
var _user$project$Main$updatePage = F3(
	function (msg, page, model) {
		var _p1 = {ctor: '_Tuple2', _0: msg, _1: page};
		_v1_2:
		do {
			switch (_p1._0.ctor) {
				case 'GalleryMsg':
					if (_p1._1.ctor === 'Gallery') {
						var _p2 = A2(_user$project$Page_Gallery$update, _p1._0._0, _p1._1._0);
						var newPageModel = _p2._0;
						var pageCmd = _p2._1;
						return {
							ctor: '_Tuple2',
							_0: _elm_lang$core$Native_Utils.update(
								model,
								{
									pageState: _user$project$Main$Loaded(
										_user$project$Main$Gallery(newPageModel))
								}),
							_1: A2(_elm_lang$core$Platform_Cmd$map, _user$project$Main$GalleryMsg, pageCmd)
						};
					} else {
						break _v1_2;
					}
				case 'DetailsMsg':
					if (_p1._1.ctor === 'Details') {
						var _p3 = A2(_user$project$Page_Details$update, _p1._0._0, _p1._1._0);
						var newPageModel = _p3._0;
						var pageCmd = _p3._1;
						return {
							ctor: '_Tuple2',
							_0: _elm_lang$core$Native_Utils.update(
								model,
								{
									pageState: _user$project$Main$Loaded(
										_user$project$Main$Details(newPageModel))
								}),
							_1: A2(_elm_lang$core$Platform_Cmd$map, _user$project$Main$DetailsMsg, pageCmd)
						};
					} else {
						break _v1_2;
					}
				default:
					break _v1_2;
			}
		} while(false);
		return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
	});
var _user$project$Main$viewPage = F2(
	function (isLoading, page) {
		var frame = _user$project$Views_Page$frame(isLoading);
		var _p4 = page;
		switch (_p4.ctor) {
			case 'Blank':
				return A2(
					frame,
					{ctor: '[]'},
					_elm_lang$html$Html$text(''));
			case 'NotFound':
				return A2(
					frame,
					{ctor: '[]'},
					_user$project$Page_NotFound$view);
			case 'Errored':
				return A2(
					frame,
					{ctor: '[]'},
					_user$project$Page_Errored$view(_p4._0));
			case 'Gallery':
				return A2(
					_elm_lang$html$Html$map,
					_user$project$Main$GalleryMsg,
					A2(
						frame,
						{ctor: '[]'},
						_user$project$Page_Gallery$view(_p4._0)));
			default:
				return A2(
					_elm_lang$html$Html$map,
					_user$project$Main$DetailsMsg,
					A2(
						frame,
						{
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$a,
								{
									ctor: '::',
									_0: _user$project$Route$href(_user$project$Route$Gallery),
									_1: {ctor: '[]'}
								},
								{
									ctor: '::',
									_0: _elm_lang$html$Html$text('Back to Gallery'),
									_1: {ctor: '[]'}
								}),
							_1: {ctor: '[]'}
						},
						_user$project$Page_Details$view(_p4._0)));
		}
	});
var _user$project$Main$view = function (model) {
	var _p5 = model.pageState;
	if (_p5.ctor === 'Loaded') {
		return A2(_user$project$Main$viewPage, false, _p5._0);
	} else {
		return A2(_user$project$Main$viewPage, true, _p5._0);
	}
};
var _user$project$Main$PageFailedToLoad = function (a) {
	return {ctor: 'PageFailedToLoad', _0: a};
};
var _user$project$Main$DetailsLoaded = function (a) {
	return {ctor: 'DetailsLoaded', _0: a};
};
var _user$project$Main$GalleryLoaded = function (a) {
	return {ctor: 'GalleryLoaded', _0: a};
};
var _user$project$Main$setRoute = F2(
	function (maybeRoute, model) {
		var toMsg = F2(
			function (onOk, result) {
				var _p6 = result;
				if (_p6.ctor === 'Ok') {
					return onOk(_p6._0);
				} else {
					return _user$project$Main$PageFailedToLoad(_p6._0);
				}
			});
		var transition = F2(
			function (onOk, task) {
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							pageState: _user$project$Main$TransitioningFrom(
								_user$project$Main$getPage(model.pageState))
						}),
					_1: A2(
						_elm_lang$core$Task$attempt,
						toMsg(onOk),
						task)
				};
			});
		var _p7 = maybeRoute;
		if (_p7.ctor === 'Nothing') {
			return {
				ctor: '_Tuple2',
				_0: _elm_lang$core$Native_Utils.update(
					model,
					{
						pageState: _user$project$Main$Loaded(_user$project$Main$NotFound)
					}),
				_1: _elm_lang$core$Platform_Cmd$none
			};
		} else {
			if (_p7._0.ctor === 'Gallery') {
				return A2(transition, _user$project$Main$GalleryLoaded, _user$project$Page_Gallery$init);
			} else {
				return A2(
					transition,
					_user$project$Main$DetailsLoaded,
					_user$project$Page_Details$init(_p7._0._0));
			}
		}
	});
var _user$project$Main$init = function (location) {
	return A2(
		_user$project$Main$setRoute,
		_user$project$Route$fromLocation(location),
		{
			pageState: _user$project$Main$Loaded(_user$project$Main$initialPage)
		});
};
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p8 = msg;
		switch (_p8.ctor) {
			case 'SetRoute':
				return A2(_user$project$Main$setRoute, _p8._0, model);
			case 'GalleryLoaded':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							pageState: _user$project$Main$Loaded(
								_user$project$Main$Gallery(_p8._0))
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'DetailsLoaded':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							pageState: _user$project$Main$Loaded(
								_user$project$Main$Details(_p8._0))
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'PageFailedToLoad':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							pageState: _user$project$Main$Loaded(
								_user$project$Main$Errored(_p8._0))
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			default:
				return A3(
					_user$project$Main$updatePage,
					msg,
					_user$project$Main$getPage(model.pageState),
					model);
		}
	});
var _user$project$Main$SetRoute = function (a) {
	return {ctor: 'SetRoute', _0: a};
};
var _user$project$Main$main = A2(
	_elm_lang$navigation$Navigation$program,
	function (_p9) {
		return _user$project$Main$SetRoute(
			_user$project$Route$fromLocation(_p9));
	},
	{init: _user$project$Main$init, update: _user$project$Main$update, view: _user$project$Main$view, subscriptions: _user$project$Main$subscriptions})();
